{"version":3,"file":"livewire-confirm-modal.js","sources":["../js/livewire-confirm-modal.js"],"sourcesContent":["document.addEventListener('alpine:init', () => {\n    Alpine.store('confirmModal', {\n        show: false,\n        title: 'default',\n\n        toggle(){\n            this.show = !this.show;\n            console.log(\"Show? \" + this.show);\n        },\n\n        setTitle(title) {\n            this.title = title\n            console.log(\"Title? \" + this.title);\n        }\n    })\n})\n\n\nLivewire.directive('confirm-modal', ({ el, directive, component, cleanup }) => {\n    let content =  directive.expression\n\n    // The \"directive\" object gives you access to the parsed directive.\n    // For example, here are its values for: wire:click.prevent=\"deletePost(1)\"\n    //\n    // directive.raw = wire:click.prevent\n    // directive.value = \"click\"\n    // directive.modifiers = ['prevent']\n    // directive.expression = \"deletePost(1)\"\n\n    console.log(el);\n    console.log(el.getAttribute('wire:click'));\n\n    console.log(component);\n\n    const newConfirm = () => {\n        return new Promise((complete, failed)=>{\n\n            document.getElementById(\"lvcm-ok\").addEventListener(\"click\", function(){\n                Alpine.store('confirmModal').toggle();\n                console.log('ok onclick');\n                complete(true);\n            });\n\n            document.getElementById(\"lvcm-cancel\").addEventListener(\"click\", function(){\n                Alpine.store('confirmModal').toggle();\n                console.log('cancel onclick');\n                complete(false);\n            });\n\n        });\n    }\n\n    let onClick = async e => {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n\n        Alpine.store('confirmModal').setTitle('Test');\n        Alpine.store('confirmModal').toggle();\n\n        if (!await newConfirm()) {\n            console.log('cancel');\n\n        }else{\n            console.log('ok');\n            component.$wire[el.getAttribute('wire:click')];\n        }\n    }\n\n    el.addEventListener('click', onClick, { capture: true })\n\n    cleanup(() => {\n        el.removeEventListener('click', onClick)\n    })\n})\n"],"names":["title","el","directive","component","cleanup","newConfirm","complete","failed","onClick","e"],"mappings":"AAAA,SAAS,iBAAiB,cAAe,IAAM,CAC3C,OAAO,MAAM,eAAgB,CACzB,KAAM,GACN,MAAO,UAEP,QAAQ,CACJ,KAAK,KAAO,CAAC,KAAK,KAClB,QAAQ,IAAI,SAAW,KAAK,IAAI,CACnC,EAED,SAASA,EAAO,CACZ,KAAK,MAAQA,EACb,QAAQ,IAAI,UAAY,KAAK,KAAK,CACrC,CACT,CAAK,CACL,CAAC,EAGD,SAAS,UAAU,gBAAiB,CAAC,CAAE,GAAAC,EAAI,UAAAC,EAAW,UAAAC,EAAW,QAAAC,KAAc,CAC5DF,EAAU,WAUzB,QAAQ,IAAID,CAAE,EACd,QAAQ,IAAIA,EAAG,aAAa,YAAY,CAAC,EAEzC,QAAQ,IAAIE,CAAS,EAErB,MAAME,EAAa,IACR,IAAI,QAAQ,CAACC,EAAUC,IAAS,CAEnC,SAAS,eAAe,SAAS,EAAE,iBAAiB,QAAS,UAAU,CACnE,OAAO,MAAM,cAAc,EAAE,OAAM,EACnC,QAAQ,IAAI,YAAY,EACxBD,EAAS,EAAI,CAC7B,CAAa,EAED,SAAS,eAAe,aAAa,EAAE,iBAAiB,QAAS,UAAU,CACvE,OAAO,MAAM,cAAc,EAAE,OAAM,EACnC,QAAQ,IAAI,gBAAgB,EAC5BA,EAAS,EAAK,CAC9B,CAAa,CAEb,CAAS,EAGL,IAAIE,EAAU,MAAMC,GAAK,CACrBA,EAAE,eAAgB,EAClBA,EAAE,yBAA0B,EAE5B,OAAO,MAAM,cAAc,EAAE,SAAS,MAAM,EAC5C,OAAO,MAAM,cAAc,EAAE,OAAM,EAE9B,MAAMJ,KAIP,QAAQ,IAAI,IAAI,EAChBF,EAAU,MAAMF,EAAG,aAAa,YAAY,CAAC,GAJ7C,QAAQ,IAAI,QAAQ,CAM3B,EAEDA,EAAG,iBAAiB,QAASO,EAAS,CAAE,QAAS,GAAM,EAEvDJ,EAAQ,IAAM,CACVH,EAAG,oBAAoB,QAASO,CAAO,CAC/C,CAAK,CACL,CAAC"}