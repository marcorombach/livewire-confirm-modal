{"version":3,"file":"livewire-confirm-modal.js","sources":["../js/livewire-confirm-modal.js"],"sourcesContent":["document.addEventListener('alpine:init', () => {\n    Alpine.store('confirmModal', {\n        show: false,\n        title: 'default',\n        description: 'default',\n\n        hide(){\n            this.show = false;\n        },\n        present(){\n            this.show = true;\n        },\n        setTitle(title) {\n            this.title = title;\n        },\n        setDescription(description) {\n            this.description = description;\n        }\n    })\n})\n\nfunction parseMethod(rawMethod){\n    const regex = /,(?![^'\"]*['\"])/g;\n    let method = rawMethod.split('(')[0];\n    let paramString = rawMethod.split('(')[1].split(')')[0];\n\n    let params = paramString.split(regex);\n    params = params.map(str => str.replace(/^['\"]|['\"]$/g, '').trim());\n\n    return { method: method, params: params };\n}\n\nLivewire.directive('confirm-modal', ({ el, directive, component, cleanup }) => {\n    let content =  directive.expression;\n\n    let title = content.split('|')[0];\n    let description = content.split('|')[1];\n\n    const newConfirm = () => {\n        return new Promise((complete)=>{\n            document.getElementById(\"lvcm-ok-btn\").addEventListener(\"click\", function(){\n                Alpine.store('confirmModal').hide();\n                complete(true);\n            });\n\n            document.getElementById(\"lvcm-cancel-btn\").addEventListener(\"click\", function(){\n                Alpine.store('confirmModal').hide();\n                complete(false);\n            });\n        });\n    }\n\n    let onClick = async e => {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        Alpine.store('confirmModal').setTitle(title);\n        Alpine.store('confirmModal').setDescription(description);\n        Alpine.store('confirmModal').present();\n\n        if (await newConfirm()) {\n            let methodObject = parseMethod(el.getAttribute('wire:click'));\n            console.log(methodObject);\n            component.$wire[methodObject.method](...methodObject.params);\n        }\n    }\n\n    el.addEventListener('click', onClick, { capture: true });\n\n    cleanup(() => {\n        el.removeEventListener('click', onClick);\n    })\n})\n"],"names":["title","description","parseMethod","rawMethod","regex","method","params","str","el","directive","component","cleanup","content","newConfirm","complete","onClick","e","methodObject"],"mappings":"AAAA,SAAS,iBAAiB,cAAe,IAAM,CAC3C,OAAO,MAAM,eAAgB,CACzB,KAAM,GACN,MAAO,UACP,YAAa,UAEb,MAAM,CACF,KAAK,KAAO,EACf,EACD,SAAS,CACL,KAAK,KAAO,EACf,EACD,SAASA,EAAO,CACZ,KAAK,MAAQA,CAChB,EACD,eAAeC,EAAa,CACxB,KAAK,YAAcA,CACtB,CACT,CAAK,CACL,CAAC,EAED,SAASC,EAAYC,EAAU,CAC3B,MAAMC,EAAQ,mBACd,IAAIC,EAASF,EAAU,MAAM,GAAG,EAAE,CAAC,EAG/BG,EAFcH,EAAU,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAE7B,MAAMC,CAAK,EACpC,OAAAE,EAASA,EAAO,IAAIC,GAAOA,EAAI,QAAQ,eAAgB,EAAE,EAAE,KAAI,CAAE,EAE1D,CAAE,OAAQF,EAAQ,OAAQC,CAAM,CAC3C,CAEA,SAAS,UAAU,gBAAiB,CAAC,CAAE,GAAAE,EAAI,UAAAC,EAAW,UAAAC,EAAW,QAAAC,KAAc,CAC3E,IAAIC,EAAWH,EAAU,WAErBT,EAAQY,EAAQ,MAAM,GAAG,EAAE,CAAC,EAC5BX,EAAcW,EAAQ,MAAM,GAAG,EAAE,CAAC,EAEtC,MAAMC,EAAa,IACR,IAAI,QAASC,GAAW,CAC3B,SAAS,eAAe,aAAa,EAAE,iBAAiB,QAAS,UAAU,CACvE,OAAO,MAAM,cAAc,EAAE,KAAI,EACjCA,EAAS,EAAI,CAC7B,CAAa,EAED,SAAS,eAAe,iBAAiB,EAAE,iBAAiB,QAAS,UAAU,CAC3E,OAAO,MAAM,cAAc,EAAE,KAAI,EACjCA,EAAS,EAAK,CAC9B,CAAa,CACb,CAAS,EAGL,IAAIC,EAAU,MAAMC,GAAK,CAQrB,GAPAA,EAAE,eAAc,EAChBA,EAAE,yBAAwB,EAE1B,OAAO,MAAM,cAAc,EAAE,SAAShB,CAAK,EAC3C,OAAO,MAAM,cAAc,EAAE,eAAeC,CAAW,EACvD,OAAO,MAAM,cAAc,EAAE,QAAO,EAEhC,MAAMY,EAAU,EAAI,CACpB,IAAII,EAAef,EAAYM,EAAG,aAAa,YAAY,CAAC,EAC5D,QAAQ,IAAIS,CAAY,EACxBP,EAAU,MAAMO,EAAa,MAAM,EAAE,GAAGA,EAAa,MAAM,CAC9D,CACJ,EAEDT,EAAG,iBAAiB,QAASO,EAAS,CAAE,QAAS,EAAI,CAAE,EAEvDJ,EAAQ,IAAM,CACVH,EAAG,oBAAoB,QAASO,CAAO,CAC/C,CAAK,CACL,CAAC"}